{"version":3,"sources":["dbAjax.js","main.js"],"names":["sendUserMood","date","usermood","usernote","request","XMLHttpRequest","open","setRequestHeader","send","$smileys","document","querySelectorAll","feelingsTextArea","querySelector","shareFeelings","moodLeadText","userMoodContainer","userMoodSpan","moodNoteTextarea","submitFeeligns","enterFeelings","e","preventDefault","setInterval","forEach","item","classList","remove","add","setLocalStorage","userMoodEntry","userMoodNote","userMoodArray","userMoodObj","curDate","push","localStore","getItem","localStorage","setItem","JSON","stringify","Date","toJSON","slice","replace","pickedMood","moodNote","userMood","userMedianMood","arr","reduce","a","b","length","addEventListener","$smiley","event","target","toggle","parseInt","dataset","mood","value","toggleModal","toggleSuccessMessage","setTimeout","modal","trigger","closeButton","successModal","windowOnClick","window"],"mappings":"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","file":"main.00ce1cb3.map","sourceRoot":"..","sourcesContent":["export function sendUserMood(date, usermood, usernote){\n  const request = new XMLHttpRequest();\n  request.open('POST', './db.php', true);\n  request.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');\n  request.send(date, usermood, usernote);\n};","\"use strict\";\n\nimport {sendUserMood} from './dbAjax';\n\n// Query Selectors\nconst $smileys = document.querySelectorAll('.smiley');\nconst feelingsTextArea = document.querySelector('#text-area-feelings')\nconst shareFeelings = document.querySelector('#enter-mood-picker');\nconst moodLeadText = document.querySelector('#mood-lead');\nconst userMoodContainer = document.querySelector('#user-mood-container');\nconst userMoodSpan = document.querySelector('#user-mood');\nconst moodNoteTextarea = document.querySelector('#mood-note');\nconst submitFeeligns = document.querySelector('#submit-feelings');\n\n// Function for toggling the modal >>> MOVE MODAL HERE <<<\nfunction enterFeelings(e) {\n  e.preventDefault();\n  setInterval(() => {\n    $smileys.forEach(function(item){\n      item.classList.remove('hide'), item.classList.add('fadeInLeft')\n    });\n    feelingsTextArea.classList.remove('hide');\n    feelingsTextArea.classList.add('fadeInLeft');\n    userMoodContainer.classList.remove('hide');\n  }, 200)\n};\n\n\n// Function for assigning the users submitted mood to local storage\nfunction setLocalStorage(userMoodEntry, userMoodNote){\n  let userMoodArray = [];\n  let userMoodObj = {\n    'date': curDate,\n    'usermood': userMoodEntry,\n    'note': userMoodNote\n  }\n  userMoodArray.push(userMoodObj);\n  localStore.getItem()\n  localStorage.setItem('userentry', JSON.stringify(userMoodArray));\n};\n\n// Current date generator.\nconst curDate = new Date().toJSON().slice(0,10).replace(/-/g,'/');\n\nlet pickedMood = 0;\nlet moodNote = '';\nlet userMood = [];\n\n// Get the median mood value from the userMood array.\nconst userMedianMood = arr => arr.reduce((a,b) => a + b, 0) / userMood.length;\n\nshareFeelings.addEventListener('click', enterFeelings);\n\n// Assign clickListener for each smiley. >>> FIX PROBLEM WITH NUMBER NOT UPDATING WHEN CHOSING NEW SMILEY <<<\n[...$smileys].forEach($smiley => $smiley.addEventListener('click', function(){\n  event.target.classList.toggle('pickedMood');\n  pickedMood = parseInt($smiley.dataset.mood)\n}));\n\n// Submit feelings click listener, toggling the modals after submitted and saved in local storage.\nsubmitFeeligns.addEventListener('click', function(){\n  moodNote = JSON.stringify(moodNoteTextarea.value);\n  setLocalStorage(pickedMood, moodNote);\n  toggleModal();\n  toggleSuccessMessage();\n  sendUserMood(curDate, pickedMood, moodNote);\n  setTimeout(() => {\n    toggleSuccessMessage();\n  }, 3000)\n});\n\n// Query Selectors for the modals.\nconst modal = document.querySelector('.modal');\nconst trigger = document.querySelector('.trigger');\nconst closeButton = document.querySelector('.close-button');\nconst successModal = document.querySelector('.success-modal');\n\n\n// Functions for toggling the modals.\nfunction toggleModal(){\n  modal.classList.toggle('show-modal');\n}\n\nfunction toggleSuccessMessage(){\n  successModal.classList.toggle('show-modal-success');\n}\n\nfunction windowOnClick(event) {\n  if(event.target === modal) {\n    toggleModal();\n  }\n}\n\ntrigger.addEventListener('click', toggleModal);\ncloseButton.addEventListener('click', toggleModal);\nwindow.addEventListener('click', windowOnClick);\n"]}